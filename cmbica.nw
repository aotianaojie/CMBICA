% -*- mode: Noweb; noweb-code-mode: python-mode -*-

% This is a Noweb file describing and providing the implementation of FastICA,
% a program to separate foreground components from sky maps.
% You can either extract a LaTeX document describing the code or the code
% itself from this file by using "noweave" or "notangle". It is better however
% to use the Makefile provided with this distribution, as it uses the
% appropriate command line switches for each command.
%
% Author: Maurizio Tomasi, 2010

\documentclass[a4paper,10pt,twoside]{article}
\usepackage{a4wide}
\usepackage{amsmath}
\usepackage{noweb}
\usepackage{fancyhdr}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{ccaption}
\usepackage{textcomp}
\usepackage{titlesec}
\usepackage{mathpazo}
\usepackage[round]{natbib}

\noweboptions{externalindex}

\hyphenation{fast-ica}
\newcommand{\cmbica}{\textsc{CMBica}}

% Command used to indicate a section
\newcommand{\sectmark}{\S\ }

\titleformat{\section}[block]
  {\centering\normalfont\bfseries}
  {\sectmark\thesection.}{.5em}{}
\titleformat{\subsection}[runin]
  {\normalfont\bfseries}
  {\thesubsection.}{.5em}{}[. ]
\titleformat{\subsubsection}[runin]
  {\normalfont\bfseries}
  {}{.2em}{}[. ]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\pagestyle{fancy}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\sectionmark}[1]{%
  \markright{\thesection.\ #1}}
\fancyhf{}
\fancyhead[L,RO]{\bfseries\thepage}
\fancyhead[LO]{\bfseries\rightmark}
\fancyhead[RE]{\bfseries\FastICA}

\fancypagestyle{plain}{%
  \fancyhf{}
  \fancyfoot[C]{\thepage}
  \renewcommand{\headrulewidth}{0pt}
  \renewcommand{\footrulewidth}{0pt}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\captionnamefont{\small\bfseries}
\captiontitlefont{\small\itshape}

\hypersetup{pdftitle={CMBICA},
pdfauthor=Maurizio Tomasi,
pdfsubject={Commented implementation of the CMBICA program},
pdfkeywords={CMB {data analysis} {component separation} {FastICA} {independent component analysis}},
pdfborder={0 0 0}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\FastICA}{\textsc{FastICA}}

\newcommand{\vect}[1]{\mathbf{#1}}
\newcommand{\vers}[1]{\mathbf{\hat{#1}}}

\begin{document}

\bibliographystyle{plainnat}

\title{\cmbica}
\author{D.~Maino, C.~Burigana, M.~Tomasi}
\maketitle

\begin{abstract}
This document describes the implementation of \cmbica{}, a program to separate
the foregrounds components from the CMB in a set of full-sky or partial-sky
maps.
\end{abstract}

\tableofcontents

\section{Introduction}

\cmbica{} is a Python program which runs the \FastICA{} algorithm
\citep{1997HyvarinenFastICA} on a number of sky maps at different frequencies,
attempting to separate foreground components from the Cosmic Microwave
Background (CMB). It is a novel incarnation of the old FastICA program by
\citet{2002MainoFastICA}, and it exploits the fact that each foreground
component has a non-gaussian (i.e.\ white) profile distinct from everything
else, and that the CMB is the only gaussian contribution to the sky
temperature. This approach is used by a number of analysis tools similar to
\cmbica{}, e.g.\ SMICA, AltICA and others.

The source code of \cmbica{} uses a number of Python libraries:
\begin{enumerate}
\item Optparse, for interpreting command line switches (see
par.~\ref{sec:commandLineParsing}).

\item Logging, for writing log messages to standard error or any text file (see
par.~\ref{sec:logging}).

\item ConfigObj, for reading, validating and interpreting parameter files (see
par.~\ref{sec:paramFileParsing}).

\item HealPy, for reading and writing FITS maps. Note that HealPy is
based on Healpix \citep{2005GorskiHEALPix}.

\item NumPy, a library of low-level fast numerical routines.

\item SciPy, a library of high-level numerical routines (mainly used to find
eigenvalues and eigenvectors).
\end{enumerate}
This implementation of \cmbica{} has been created using the ``Literate
Programming'' approach to development \citep{KnuthLiterateProgramming}. The
[[noweb]]\ tool is required to create this documentation as well as the Python
program to be run.

In this document we illustrate the implementation of \cmbica{}. The outline of
the document is the following: \S~\ref{sec:Main} discusses the general behavior
of the program (i.e.\ the implementation of [[main]]),
\S~\ref{sec:CMBICAAlgorithms} implements the mathematical formulae of the
\FastICA{} algorithm and the appendices contain ancillary classes and functions
used by the program.


\input{main-program}

\section{The Numerical Algorithms used in the Code}
\label{sec:CMBICAAlgorithms}

In this section we discuss the implementation of the mathematical formulae
needed by the \FastICA{} algorithm. There are two algorithms that need to be
implemented:
\begin{enumerate}
\item The \FastICA{} algorithm itself;
\item A method which improves the uncorrelatedness of the maps. Such process is
called \emph{whitening} and is a step to be made \emph{before} applying the
\FastICA{} algorithm. The reason is that whitening transforms data matrix $X$ into
a new matrix $X'$ whose correlation matrix is unity --- this property is then
used extensively by the \FastICA{} algorithm.
\end{enumerate}

\input{test}

\input{whitening}

\input{fastica}

\input{masking}


\appendix

\section{Index of symbols}

Here we provide a list of the symbols used in the code. Each reference is of
the form \texttt{nL}, where \texttt{n} is the number of the page and \texttt{L}
a letter specifying the code chunk within that page starting from ``a''.
Underlined references point to the definition of the symbol.

\nowebindex

\bibliography{cmbica}
\end{document}
